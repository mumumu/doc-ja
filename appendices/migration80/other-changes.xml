<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 976425d4f6eec32448be3cc22ec063015921b753 Maintainer: mumumu Status: ready -->

<sect1 xml:id="migration80.other-changes" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>その他の変更</title>

 <sect2 xml:id="migration80.other-changes.sapi">
  <title>SAPI モジュールの変更</title>

  <sect3 xml:id="migration80.other-changes.sapi.apache2handler">
   <title>Apache2Handler</title>

   <para>
    PHP モジュールの名前が <literal>php7_module</literal> から
    <literal>php_module</literal> に変更されました。
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration80.other-changes.functions">
  <title>変更された関数</title>

  <sect3 xml:id="migration80.other-changes.functions.reflection">
   <title>リフレクション</title>

   <para>
    <methodname>ReflectionClass::getConstants</methodname> と
    <methodname>ReflectionClass::getReflectionConstants</methodname> の結果は
    新しい引数 <parameter>filter</parameter> を経由してフィルタされるように変更されました。
    この用途のために、以下の3つの新しい定数が追加されています:
   </para>
   <para>
    <simplelist>
     <member><constant>ReflectionClassConstant::IS_PUBLIC</constant></member>
     <member><constant>ReflectionClassConstant::IS_PROTECTED</constant></member>
     <member><constant>ReflectionClassConstant::IS_PRIVATE</constant></member>
    </simplelist>
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.functions.standard">
   <title>標準ライブラリ</title>

   <para>
    数学関数
    <function>abs</function>,
    <function>ceil</function>,
    <function>floor</function>,
    <function>round</function>
    は、
    <link linkend="language.types.declarations.strict"><literal>strict_types</literal> ディレクティブ</link>
    を適切に尊重するようになりました。
    PHP 8.0.0 より前のバージョンでは、
    たとえ strict モードであっても、
    最初の引数の型を強制的に自動変換していました。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.functions.zip">
   <title>Zip</title>

   <itemizedlist>
    <listitem>
     <para>
      <methodname>ZipArchive::addGlob</methodname> と
      <methodname>ZipArchive::addPattern</methodname> メソッドは
      配列 <parameter>options</parameter> の値に、以下の値を追加で受け入れるようになりました:
     </para>
     <para>
      <simplelist>
       <member><literal>flags</literal></member>
       <member><literal>comp_method</literal></member>
       <member><literal>comp_flags</literal></member>
       <member><literal>env_method</literal></member>
       <member><literal>enc_password</literal></member>
      </simplelist>
     </para>
    </listitem>
    <listitem>
     <para>
      <methodname>ZipArchive::addEmptyDir</methodname>,
      <methodname>ZipArchive::addFile</methodname>,
      <methodname>ZipArchive::addFromString</methodname> に新しい引数
      <parameter>flags</parameter> が追加されました。
      これによって、名前のエンコーディング
      (<constant>ZipArchive::FL_ENC_<replaceable>*</replaceable></constant>)
      とエントリの置換 (<constant>ZipArchive::FL_OVERWRITE</constant>) が管理できるようになります。
     </para>
    </listitem>
    <listitem>
     <para>
      <methodname>ZipArchive::extractTo</methodname> メソッドは、ファイルの変更時間も復元するようになりました。
     </para>
    </listitem>
   </itemizedlist>
  </sect3>
 </sect2>

 <sect2 xml:id="migration80.other-changes.extensions">
  <title>拡張モジュールに対するその他の変更</title>

  <sect3 xml:id="migration80.other-changes.extensions.curl">
   <title>CURL</title>

   <itemizedlist>
    <listitem>
     <para>
      CURL 拡張モジュールは、libcurl 7.29.0 以降が必須になりました。
     </para>
    </listitem>
    <listitem>
     <para>
      推奨されなくなっていた <function>curl_version</function> 関数の
      <parameter>version</parameter> 引数が削除されました。
     </para>
    </listitem>
   </itemizedlist>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.date">
   <title>日付と時刻</title>

   <para>
    <classname>DatePeriod</classname> クラスが、
    (<interfacename>Traversable</interfacename> ではなく)
    <interfacename>IteratorAggregate</interfacename> を実装しました。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.dom">
   <title>DOM</title>

   <para>
    <classname>DOMNamedNodeMap</classname> と <classname>DOMNodeList</classname> が、
    (<interfacename>Traversable</interfacename> ではなく)
    <interfacename>IteratorAggregate</interfacename> を実装しました。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.intl">
   <title>国際化関数</title>

   <para>
    <classname>IntlBreakIterator</classname> と <classname>ResourceBundle</classname> が、
    (<interfacename>Traversable</interfacename> ではなく)
    <interfacename>IteratorAggregate</interfacename> を実装しました。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.enchant">
   <title>Enchant</title>

   <para>
    enchant 拡張モジュールは、利用可能な場合は、デフォルトで libenchant-2 を使うようになりました。
    libenchant バージョン1 もまだサポートしていますが、推奨されませんし、将来削除される可能性があります。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.gd">
   <title>GD</title>

   <itemizedlist>
    <listitem>
     <para>
      <function>imagepolygon</function>,
      <function>imageopenpolygon</function>,
      <function>imagefilledpolygon</function> 関数の
      <parameter>num_points</parameter> 引数はオプションになりました。
      つまり、これらの関数は3つ、または4つの引数で呼び出すことが出来るということです。
      この引数が省略された場合、この値は <code>count($points)/2</code> で計算されます。
     </para>
    </listitem>
    <listitem>
     <para>
      現在の補間メソッドを取得するために、<function>imagegetinterpolation</function> 関数が追加されました。
     </para>
    </listitem>
   </itemizedlist>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.json">
   <title>JSON</title>

   <para>
    JSON 拡張モジュールは無効にできなくなりました。
    date 拡張モジュールと同様に、PHP をビルドするために常に必須になっています。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.mbstring">
   <title>マルチバイト文字列</title>

   <para>
    Unicode データのテーブルが、バージョン 13.0.0 に更新されました。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.pdo">
   <title>PDO</title>

   <para>
    <classname>PDOStatement</classname> は、
    (<interfacename>Traversable</interfacename> ではなく)
    <interfacename>IteratorAggregate</interfacename> を実装しました。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.libxml">
   <title>LibXML</title>

   <para>
    libxml の最低バージョンが 2.9.0 になりました。
    これにより、外部エンティティの読み込みがデフォルトで無効であることが保証されるようになりました。
    よって、XXE攻撃を防ぐために追加の手順を踏む必要はありません。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.mysqli">
   <title>MySQLi / PDO MySQL</title>

   <itemizedlist>
    <listitem>
     <para>
      mysqlnd を使わない (これはデフォルトであり、推奨されるオプションです) 場合、
      サポートされる libmysqlclient の最低バージョンは 5.5 になりました。
     </para>
    </listitem>
    <listitem>
     <para>
      <classname>mysqli_result</classname> は、
      (<interfacename>Traversable</interfacename> ではなく)
      <interfacename>IteratorAggregate</interfacename> を実装しました。
     </para>
    </listitem>
   </itemizedlist>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.pgsql">
   <title>PGSQL / PDO PGSQL</title>

   <para>
    PGSQL と PDO PGSQL 拡張モジュールは、libpq 9.1 以降が最低限必要になりました。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.readline">
   <title>Readline</title>

   <para>
    対話的なプロンプトが始まる前に
    (つまり、 <link linkend="ini.auto-prepend-file">auto_prepend_file</link> を実行中に)
    <function>readline_completion_function</function> を呼ぶと、
    デフォルトの対話プロンプトの補完関数を上書きするようになりました。
    PHP 8.0.0 より前のバージョンでは、
    <function>readline_completion_function</function> 関数は
    対話的なプロンプトが始まった後に呼び出したときにだけ動作していました。
   </para>
  </sect3>

  <sect3 xml:id="migration80.other-changes.extensions.simplexml">
   <title>SimpleXML</title>

   <para>
    <classname>SimpleXMLElement</classname> は、
    <interfacename>RecursiveIterator</interfacename> を実装し、
    <classname>SimpleXMLIterator</classname> の機能を吸収しました。
    <classname>SimpleXMLIterator</classname> は、
    <classname>SimpleXMLElement</classname> を継承しただけのものです。
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration80.other-changes.ini">
  <title>INI ファイルの扱いの変更</title>

  <itemizedlist>
   <listitem>
    <para>
     <!--<link linkend="ini.com.dotnet-version">-->com.dotnet_version<!--</link>-->
     は、<classname>dotnet</classname> オブジェクトで使う、
     .NET framework のバージョンを選ぶための新しいINIディレクティブです。
    </para>
   </listitem>
   <listitem>
    <para>
     <!--<link linkend="ini.zend.exception-string-param-max-len">-->zend.exception_string_param_max_len<!--</link>-->
     は、文字列化されたスタックトレースの引数中の、
     文字列の最大の長さを設定する新しいINIディレクティブです。
    </para>
   </listitem>
   </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.other-changes.ebcdic">
  <title>EBCDIC</title>

  <para>
   EBCDIC ターゲットはサポートされなくなりました。
   しかし、そもそもまだ動いているわけでもなさそうです。
  </para>
 </sect2>

 <sect2 xml:id="migration80.other-changes.performance">
  <title>パフォーマンスに関わる変更</title>

  <itemizedlist>
   <listitem>
    <para>
     ジャストインタイム (JIT) コンパイラが opcache 拡張モジュールに追加されました。
     <!-- https://wiki.php.net/rfc/jit -->
    </para>
   </listitem>
   <listitem>
    <para>
     隙間がない配列で <function>array_slice</function> 関数を使う場合、
     最初のオフセットを探すために配列全体を走査しなくなりました。
     これによって、オフセットが巨大、かつサイズが小さい場合に、
     関数の実行時間が著しく改善する可能性があります。
    </para>
   </listitem>
   <listitem>
    <para>
     <constant>LC_CTYPE</constant> ロケールが
     <literal>"C"</literal> の場合 (これはデフォルトです)、
     <function>strtolower</function> 関数は SIMD 実装を使うようになりました。
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
