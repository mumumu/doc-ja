<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1c3a0a021e0d97acce54fda55f6e941557056afe Maintainer: takagi Status: ready -->
<refentry xml:id="memcache.setserverparams" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::setServerParams</refname>
  <refname>memcache_set_server_params</refname>
  <refpurpose>サーバーのパラメータおよび状態を、実行時に変更する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::setServerParams</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>11211</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retry_interval</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>status</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>failure_callback</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>memcache_set_server_params</methodname>
   <methodparam><type>Memcache</type><parameter>memcache</parameter></methodparam>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>11211</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retry_interval</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>status</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>failure_callback</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   <function>Memcache::setServerParams</function> は、
   サーバーのパラメータを実行時に変更します。
  </para>
  
  <note>
   <para>
    この関数は、Memcache バージョン 2.1.0 で追加されました。
   </para>
  </note>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>host</parameter></term>
     <listitem>
      <para>
       memcached が接続を待ち受けるホストを指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       memcached が接続を待ち受けるポートを指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       デーモンへの接続の際に使用する値 (秒単位) です。
       デフォルト値を 1 秒でも変更する前には十分注意してください。
       接続が遅くなってしまうと、 キャッシュ処理のメリットが
       なくなってしまいます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>retry_interval</parameter></term>
     <listitem>
      <para>
       サーバーとの接続が失敗した際に再試行を行う頻度を設定します。
       デフォルト値は 15 秒です。このパラメータを -1 にすると、
       自動的な再試行を行いません。
       <function>dl</function> を使用してこの拡張モジュールが動的に
       読み込まれている場合は、このパラメータおよび
       <parameter>persistent</parameter> は何の効果も及ぼしません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>status</parameter></term>
     <listitem>
      <para>
       サーバーがオンライン状態であるかどうかを制御します。このパラメータを
       &false; にし、<parameter>retry_interval</parameter> を -1
       と設定すると、失敗したサーバーもコネクションプールに残します。
       これにより、キー配布アルゴリズムに影響を与えないようにします。
       このサーバーへのリクエストは、フェイルオーバーされるか失敗します。
       どちらになるかは <parameter>memcache.allow_failover</parameter>
       の設定によって決まります。デフォルトは &true; で、
       サーバーがオンライン状態であることを意味します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>failure_callback</parameter></term>
     <listitem>
      <para>
       エラーが発生した際に実行されるコールバック関数を指定できるようにします。
       コールバック関数は、フェイルオーバー処理の前に実行されます。
       この関数は、ふたつの引数 (ホスト名、失敗したサーバーのポート)
       を受け取ります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>Memcache::setServerParams</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

function _callback_memcache_failure($host, $port) {
    print "memcache '$host:$port' failed";
}

/* オブジェクト指向の API */

$memcache = new Memcache;

// サーバーをオフラインモードで追加します
$memcache->addServer('memcache_host', 11211, false, 1, 1, -1, false);

// サーバーをオンラインに変更します
$memcache->setServerParams('memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

/* 手続き型の API */

$memcache_obj = memcache_connect('memcache_host', 11211);
memcache_set_server_params($memcache_obj, 'memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::addServer</function></member>
    <member><function>Memcache::getServerStatus</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
