<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9960a09a5705102bf4dd0ce63e03d9ec716d0015 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="function.imagefilltoborder" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagefilltoborder</refname>
  <refpurpose>特定色で塗りつぶす</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagefilltoborder</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam><type>int</type><parameter>x</parameter></methodparam>
   <methodparam><type>int</type><parameter>y</parameter></methodparam>
   <methodparam><type>int</type><parameter>border_color</parameter></methodparam>
   <methodparam><type>int</type><parameter>color</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagefilltoborder</function>は、
   <parameter>border_color</parameter>で指定した色を境界色として塗りつぶし
   を行います。(<parameter>x</parameter>,<parameter>y</parameter>)が
   塗りつぶしの始点(左上が0, 0)で、領域内を
   <parameter>color</parameter>色で塗りつぶします。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       開始位置の x 座標。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       開始位置の y 座標。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>border_color</parameter></term>
     <listitem>
      <para>
       境界色。&gd.identifier.color;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>color</parameter></term>
     <listitem>
      <para>
       塗りつぶし色。&gd.identifier.color;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>楕円の塗りつぶし</title>
    <programlisting role="php">
<![CDATA[
<?php
// 画像ハンドルを作成し、背景を白に設定します
$im = imagecreatetruecolor(100, 100);
imagefilledrectangle($im, 0, 0, 100, 100, imagecolorallocate($im, 255, 255, 255));

// 黒い線で楕円を描画します
imageellipse($im, 50, 50, 50, 50, imagecolorallocate($im, 0, 0, 0));

// 枠線と塗りつぶしの色を設定します
$border = imagecolorallocate($im, 0, 0, 0);
$fill = imagecolorallocate($im, 255, 0, 0);

// 選択した部分を塗りつぶします
imagefilltoborder($im, 50, 50, $border, $fill);

// 出力します
header('Content-type: image/png');
imagepng($im);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>出力例 : 楕円の塗りつぶし</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagefilltoborder.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <simpara>
   塗りつぶしのアルゴリズムは、
   どのピクセルが既に設定されているかについて明示的に記憶しません。
   むしろピクセルの色からそれを推測しようとします。
   よって、そのピクセルが既に存在していたものか、
   新たに設定されたものなのかは区別できません。
   これは、画像で既に使われている色で画像を塗りつぶそうとすると、
   望ましくない結果が得られることがあるということです。
  </simpara>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
