<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e947f2e12b1e321d67f6560c5f2884e6d885858f Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi,mumumu -->
<refentry xml:id="function.getrusage" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>getrusage</refname>
  <refpurpose>現在のリソース使用状況を取得する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>getrusage</methodname>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   この関数は、<command>getrusage(2)</command> へのインターフェイスです。
   システムコールから返されたデータを含む連想配列を返します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       <parameter>mode</parameter> が 1 の場合、getrusage は <constant>RUSAGE_CHILDREN</constant>
       を付けてコールされます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   システムコールから返されたデータを含む連想配列を返します。
   すべてのエントリは、記述されたフィールド名を用いてアクセス可能です。
   失敗時に &false; を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.0.0</entry>
       <entry>
        この関数は、Windows でサポートされるようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>getrusage</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$dat = getrusage();
echo $dat["ru_oublock"];       // ブロック出力操作の回数
echo $dat["ru_inblock"];       // ブロック入力操作の回数
echo $dat["ru_msgsnd"];        // IPC メッセージの送信数
echo $dat["ru_msgrcv"];        // IPC メッセージの受信数
echo $dat["ru_maxrss"];        // RAM 上に存在する仮想ページのサイズ(resident set size) の最大値
echo $dat["ru_ixrss"];         // 共有メモリサイズの合計値
echo $dat["ru_idrss"];         // 非共有データの合計サイズ
echo $dat["ru_minflt"];        // ページの再利用 (ソフトページフォルト)
echo $dat["ru_majflt"];        // ページフォルトの数 (hard page faults)
echo $dat["ru_nsignals"];      // 受信したシグナル
echo $dat["ru_nvcsw"];         // 意図したコンテキストスイッチ
echo $dat["ru_nivcsw"];        // 意図しないコンテキストスイッチ
echo $dat["ru_nswap"];         // スワップの数
echo $dat["ru_utime.tv_usec"]; // 使用するユーザー時間 (マイクロ秒)
echo $dat["ru_utime.tv_sec"];  // 使用するユーザー時間 (秒)
echo $dat["ru_stime.tv_usec"]; // 使用するシステム時間 (マイクロ秒)
echo $dat["ru_stime.tv_sec"];  // 使用するシステム時間 (秒)
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Windows では、<function>getrusage</function> は以下のメンバーしか帰しません。
   </para>
   <para>
    <simplelist>
     <member><literal>"ru_stime.tv_sec"</literal></member>
     <member><literal>"ru_stime.tv_usec"</literal></member>
     <member><literal>"ru_utime.tv_sec"</literal></member>
     <member><literal>"ru_utime.tv_usec"</literal></member>
     <member>
      <literal>"ru_majflt"</literal> (<parameter>mode</parameter> が
      <constant>RUSAGE_SELF</constant> である場合のみ)
     </member>
     <member>
      <literal>"ru_maxrss"</literal> (<parameter>mode</parameter> が
      <constant>RUSAGE_SELF</constant> である場合のみ)
     </member>
    </simplelist>
   </para>
   <para>
    <function>getrusage</function> を呼び出す際に <parameter>mode</parameter>
    に <literal>1</literal> (<constant>RUSAGE_CHILDREN</constant>) を指定すると、
    各スレッドのリソース使用状況を収集します (つまり、内部的には
    <constant>RUSAGE_THREAD</constant> を指定してこの関数が呼ばれるということです)。
   </para>
  </note>
  <note>
   <para>
    BeOS 2000 では、以下のメンバーしか返しません。
   </para>
   <para>
    <simplelist>
     <member><literal>"ru_stime.tv_sec"</literal></member>
     <member><literal>"ru_stime.tv_usec"</literal></member>
     <member><literal>"ru_utime.tv_sec"</literal></member>
     <member><literal>"ru_utime.tv_usec"</literal></member>
    </simplelist>
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><command>getrusage(2)</command> についてのシステムの man ページ</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
