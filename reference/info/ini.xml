<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b1116af46680f7baf89c46610430a3b63ce9a1f0 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi,mumumu -->
<section xml:id="info.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>PHP オプション/情報設定オプション</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry><link linkend="ini.assert.active">assert.active</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      PHP 8.3.0 以降は非推奨
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.bail">assert.bail</link></entry>
     <entry>"0"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      PHP 8.3.0 以降は非推奨
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.warning">assert.warning</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      PHP 8.3.0 以降は非推奨
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.callback">assert.callback</link></entry>
     <entry>NULL</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      PHP 8.3.0 以降は非推奨
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.quiet-eval">assert.quiet_eval</link></entry>
     <entry>"0"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>PHP 8.0.0 で削除</entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.exception">assert.exception</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      PHP 8.0.0 より前のバージョンでは、デフォルト値は <literal>"0"</literal> でした。
      PHP 8.3.0 以降は非推奨
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.enable-dl">enable_dl</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_SYSTEM</constant></entry>
     <entry>&removed.php.future;</entry>
    </row>
    <row>
     <entry><link linkend="ini.max-execution-time">max_execution_time</link></entry>
     <entry>"30"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-time">max_input_time</link></entry>
     <entry>"-1"</entry>
     <entry><constant>INI_PERDIR</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
     <entry>"64"</entry>
     <entry><constant>INI_PERDIR</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
     <entry>1000</entry>
     <entry><constant>INI_PERDIR</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.zend.enable-gc">zend.enable_gc</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link></entry>
     <entry>"0"</entry>
     <entry><constant>INI_SYSTEM</constant></entry>
     <entry>PHP 8.3.0 以降で利用可能</entry>
    </row>
    <row>
     <entry><link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link></entry>
     <entry>"0"</entry>
     <entry><constant>INI_SYSTEM</constant></entry>
     <entry>PHP 8.3.0 以降で利用可能</entry>
    </row>
    <row>
     <entry><link linkend="ini.fiber.stack-size">fiber.stack_size</link></entry>
     <entry></entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>PHP 8.1.0 以降で利用可能</entry>
    </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>
 
 &ini.descriptions.title;
 
 <para>
  <variablelist>
   <varlistentry xml:id="ini.assert.active">
    <term>
     <parameter>assert.active</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      <function>assert</function> の評価を有効にします。
      <function>assert</function> の振る舞いを制御するには、
      <link linkend="ini.zend.assertions">zend.assertions</link>
      を代わりに使うべきです。
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.bail">
    <term>
     <parameter>assert.bail</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      assertion が失敗した時にスクリプトの実行を終了します。
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.warning">
    <term>
     <parameter>assert.warning</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      assertion が失敗する度に PHP 警告を発行します。
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.callback">
    <term>
     <parameter>assert.callback</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      assertion が失敗した時にコールされるユーザー関数
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.quiet-eval">
    <term>
     <parameter>assert.quiet_eval</parameter>
     <type>bool</type>
    </term>
    <listitem>
     &warn.feature.removed-8-0-0;
     <para>
      assertion 式の評価時に <function>error_reporting</function> の現在の
      設定を使用します。有効な場合、評価時にエラーは表示されません。
      (暗黙のうちに error_reporting(0) とします)
      無効な場合、エラーは、<function>error_reporting</function> の設定に
      基づき設定されます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.exception">
    <term>
     <parameter>assert.exception</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      アサーションに失敗した場合に <classname>AssertionError</classname> 例外を発行します。
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.enable-dl">
    <term>
      <parameter>enable_dl</parameter>
      <type>bool</type>
    </term>
    <listitem>
     <para>
      このディレクティブを使うと、
      PHP の拡張モジュールを <function>dl</function>
      で動的にロードする機能を、オンまたはオフに変更することができます。
     </para>
     <para>
      動的ロード機能をオフにするのは主としてセキュリティ上の理由によります。
      動的ロード機能により、
      <link linkend="ini.open-basedir">open_basedir</link> の拘束を全て
      無視することが可能になります。
      デフォルトでは、動的ロードが可能です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-execution-time">
    <term>
     <parameter>max_execution_time</parameter>
      <type>int</type>
    </term>
    <listitem>
     <para>
      スクリプトがパーサにより強制終了されるまでに許容される最大の
      時間を秒単位で指定します。この命令は、いい加減に書かれた
      スクリプトがサーバーの負荷を上げることを防止するのに役立ちます。
      デフォルトでは、<literal>30</literal> に設定されています。
      PHP を <link linkend="features.commandline">コマンドライン
      </link> から実行する場合のデフォルト設定は <literal>0</literal>
      です。
     </para>
     <para>
      Windows 以外のシステムでは、
      最大実行時間は、システムコール、ストリーム操作等の
      影響を受けません。より詳細な情報については、
      <function>set_time_limit</function> 関数の説明を参照ください。
     </para>
     <para>
      Web サーバー側でもタイムアウトの設定項目を持ち、
      その設定で PHP の実行が中断されることもあります。
      Apache には <literal>Timeout</literal> ディレクティブ、IIS には
      CGI タイムアウト関数があり、どちらもデフォルトで 300 秒に設定されています。
      これらの意味については、Web サーバーのドキュメントを参照ください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-time">
    <term>
     <parameter>max_input_time</parameter>
      <type>int</type>
    </term>
    <listitem>
     <para>
      スクリプトが POST、GET などの入力を
      パースする最大の時間を、秒単位で指定します。
      これは、サーバー側で PHP が起動してからスクリプトの実行を開始するまでの時間です。
      デフォルトの設定は <literal>-1</literal> です。
      これは <link linkend="ini.max-execution-time">max_execution_time</link>
      が代わりに使われることを意味しています。
      無制限にするには、<literal>0</literal> を設定してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-nesting-level">
    <term>
     <parameter>max_input_nesting_level</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      <link linkend="language.variables.external">外部からの入力変数</link>
      (<varname>$_GET</varname> や <varname>$_POST</varname> など)
      のネストの深さの最大値を設定します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-vars">
    <term>
     <parameter>max_input_vars</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      <link linkend="language.variables.external">入力変数</link>
      を最大で何個まで受け付けるかを指定します
      (この制限は、スーパーグローバル $_GET、$_POST そして $_COOKIE
      にそれぞれ個別に適用されます)。
      このディレクティブを使うと、ハッシュの衝突を悪用したサービス不能攻撃を受ける可能性を軽減できます。
      このディレクティブで設定した数を超える入力変数があった場合は
      <constant>E_WARNING</constant> が発生し、
      それ以降の入力変数はリクエストから削除されます。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.zend.enable-gc">
    <term>
     <parameter>zend.enable_gc</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      循環参照コレクタを有効あるいは無効にします。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.max-allowed-stack-size">
    <term>
     <parameter>zend.max_allowed_stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      オペレーティングシステムが、
      プログラムに使うことを許可しているネイティブスタックスペースの最大値。
      オペレーティングシステムがが許可している以上のサイズを使おうとすると、
      通常はハードなクラッシュが発生し、
      デバッグ情報が簡単に利用できることはありません。
      デバッグを容易にするために、PHP のエンジンはそうしたことが発生する前に
      (<link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link>-<link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link> バイト以上のスタックをプログラムが使った場合に)
      <classname>Error</classname> をスローします。
     </para>
     <para>
      ユーザー定義の再帰的なコードは、ネイティブスタック空間を消費しません。
      しかし、内部関数やマジックメソッドは消費します。
      これらの関数を含む、とても深い再帰コードは、
      利用可能なネイティブスタックスペースをすべて使い切る原因になりえます。
     </para>
     <para>
      この
      このパラメータに設定可能な値は下記の通りです:
      <simplelist>
       <member>
        <literal>0</literal>:
        プログラムが消費できる、
        オペレーティングシステムのネイティブスタックスペースの最大値を自動検知します。これがデフォルトです。
        検知できない場合は、既知のシステムのデフォルト値を使います。
       </member>
       <member>
        <literal>-1</literal>: エンジンのスタックサイズチェックを無効にします。
       </member>
       <member>
        正の整数: 固定のサイズをバイト単位で指定します。
        この値に大き過ぎる値を指定すると、スタックサイズチェックを無効にすることと同じことになります。
       </member>
      </simplelist>
     </para>
     <para>
      <link linkend="language.fibers">fibers</link> のスタックサイズは
      <link linkend="ini.fiber.stack-size">fiber.stack_size</link>
      によって決まります。
      Fiber の実行中に行われるスタックをチェックする際には、
      <link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link> の代わりにこれを使います。
     </para>
     <note>
      <para>
       この機能は スタック <emphasis>バッファ</emphasis>
       のオーバーフローとは無関係です。つまり、セキュリティ機能ではありません。
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.reserved-stack-size">
    <term>
     <parameter>zend.reserved_stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      予約するスタックのサイズを、バイト単位で指定します。
      この値はバッファの値として
      スタックサイズをチェックする際に <link linkend="ini.zend.max-allowed-stack-size">max allowed stack size</link> から引かれます。
     </para>
     <para>
      このパラメータに設定可能な値は下記の通りです:
      <simplelist>
       <member>
        <literal>0</literal>: 適切な値を自動的に検知します。
       </member>
       <member>
        正の整数: 固定のサイズをバイト単位で指定します。
       </member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.fiber.stack-size">
    <term>
     <parameter>fiber.stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      個別の <link linkend="language.fibers">Fiber</link>
      に割り当てられるネイティブスタックサイズを、
      バイト単位で指定します。
     </para>
     <para>
      ポインタのサイズが8バイトより小さいシステムでは、
      デフォルト値は 1MiB です。
      8バイト以上のシステムでは、デフォルトは 2MiB です。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
