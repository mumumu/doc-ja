<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka,mumumu -->
<refentry xml:id="function.explode" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>explode</refname>
  <refpurpose>文字列を文字列により分割する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>explode</methodname>
   <methodparam><type>string</type><parameter>separator</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer><constant>PHP_INT_MAX</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   文字列の配列を返します。この配列の各要素は、
   <parameter>string</parameter> を文字列
   <parameter>separator</parameter> で区切った部分文字列となります。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>separator</parameter></term>
     <listitem>
      <para>
       区切り文字列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       入力文字列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       <parameter>limit</parameter> に正の値が指定された場合、返される配列には
       最大 <parameter>limit</parameter> の要素が含まれ、その最後の要素には
       <parameter>string</parameter> の残りの部分が全て含まれます。
      </para>
      <para>
       もし <parameter>limit</parameter> パラメータが負の場合、
       最後の -<parameter>limit</parameter> 個の要素を除く全ての構成要素が返されます。
      </para>
      <para>
       <parameter>limit</parameter> パラメータがゼロの場合は、1 を指定したものとみなされます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <note>
   <para>
    PHP 8.0 より前のバージョンでは、<function>implode</function>
    はいずれのパラメータ順も受け入れることができていましたが、
    <function>explode</function> はそのようなことはサポートしていません。
    つまり、<parameter>string</parameter> 引数の前に必ず
    <parameter>separator</parameter> 引数がくることを確認しなければいけません。
   </para>
  </note>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>string</parameter> の内容を
   <parameter>separator</parameter> で分割した文字列の配列を返します。
  </para>
  <para>
   空の文字列 ("") が <parameter>separator</parameter> として使用された場合、
   <function>explode</function> は <classname>ValueError</classname>
   をスローします。
   <parameter>separator</parameter> に引数
   <parameter>string</parameter> に含まれていない値が含まれている場合は、
   <parameter>limit</parameter> が負の値なら空の配列、そうでなければ
   引数 <parameter>string</parameter> を含む配列を返します。
   <parameter>separator</parameter> の値が <parameter>string</parameter>
   の最初か最後に現れた場合、その位置に応じて、
   返される配列の最初か最後に空の配列が追加されます。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       引数 <parameter>separator</parameter> に空文字列 ("") を渡した場合、
       <classname>ValueError</classname> をスローするようになりました。
       それより前のバージョンでは、
       <function>explode</function> は &false; を返していました。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>explode</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// 例 1
$pizza  = "piece1 piece2 piece3 piece4 piece5 piece6";
$pieces = explode(" ", $pizza);
echo $pieces[0], PHP_EOL; // piece1
echo $pieces[1], PHP_EOL; // piece2

// 例 2
$data = "foo:*:1023:1000::/home/foo:/bin/sh";
list($user, $pass, $uid, $gid, $gecos, $home, $shell) = explode(":", $data);
echo $user, PHP_EOL; // foo
echo $pass, PHP_EOL; // *
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>explode</function> の戻り値の例</title>
    <programlisting role="php">
<![CDATA[
<?php
/*
   デリミタを含まない文字列の場合は、
   単に元の文字列だけを含む一要素の配列を返します
*/
$input1 = "hello";
$input2 = "hello,there";
$input3 = ',';
var_dump( explode( ',', $input1 ) );
var_dump( explode( ',', $input2 ) );
var_dump( explode( ',', $input3 ) );

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(1)
(
    [0] => string(5) "hello"
)
array(2)
(
    [0] => string(5) "hello"
    [1] => string(5) "there"
)
array(2)
(
    [0] => string(0) ""
    [1] => string(0) ""
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><parameter>limit</parameter> パラメータの例</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'one|two|three|four';

// 正の値を持つ limit
print_r(explode('|', $str, 2));

// 負の値を持つ limit
print_r(explode('|', $str, -1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => one
    [1] => two|three|four
)
Array
(
    [0] => one
    [1] => two
    [2] => three
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>str_split</function></member>
    <member><function>mb_split</function></member>
    <member><function>str_word_count</function></member>
    <member><function>strtok</function></member>
    <member><function>implode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
