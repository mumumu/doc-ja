<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: shimooka Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.number-format" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>number_format</refname>
  <refpurpose>数字を千の位毎にグループ化してフォーマットする</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>number_format</methodname>
   <methodparam><type>float</type><parameter>num</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>decimals</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>decimal_separator</parameter><initializer>"."</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>thousands_separator</parameter><initializer>","</initializer></methodparam>
  </methodsynopsis>
  <para>
   数値を千の位毎にグループ化し、オプションで小数の桁も追加してフォーマットします。小数の桁を追加する場合、四捨五入のルールを使います。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>num</parameter></term>
     <listitem>
      <para>
       フォーマットする数値。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>decimals</parameter></term>
     <listitem>
      <para>
       小数点以下の桁数。
       <literal>0</literal> を指定すると、
       戻り値の <parameter>decimal_separator</parameter> は省略されます。
       PHP 8.3.0 以降では、この値に負の値を指定すると、
       <parameter>num</parameter> は小数点前の有効桁数
       <parameter>decimals</parameter> 桁に丸められるようになりました。
       これより前のバージョンでは、負の値を指定しても無視され、
       <literal>0</literal> を指定した場合と同じように処理されていました。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>decimal_separator</parameter></term>
     <listitem>
      <para>
       小数点を表す区切り文字。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>thousands_separator</parameter></term>
     <listitem>
      <para>
       千の位毎の区切り文字。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>num</parameter> をフォーマットした結果を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        <parameter>decimals</parameter> に負の値を指定した場合の処理が追加されました。 
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        これより前のバージョンでは、
        <function>number_format</function> 関数は
        引数を1個、2個、または4個受け入れていました(つまり、3個はダメでした)。
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <function>number_format</function> は、
        <literal>-0</literal> を返さないように変更されました。
        これより前のバージョンでは、
        <parameter>num</parameter> が <literal>-0.01</literal> 
        のようなケースで <literal>-0</literal> が返される場合がありました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>number_format</function> の例</title>
    <para>
     例えばフランスの表記法では、通常カンマ (',')
     を小数の区切りとした二桁の小数と、千位毎の区切りとしてスペース
      (' ') を用います。数値を書式設定するさまざまな方法を次の例で示します。
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$number = 1234.56;

// 英語での表記 (デフォルト)
echo number_format($number), PHP_EOL;
// 1,235

// フランスの表記
echo number_format($number, 2, ',', ' '), PHP_EOL;
// 1 234,56

$number = 1234.5678;

// 千位毎の区切りがない英語での表記
echo number_format($number, 2, '.', ''), PHP_EOL;
// 1234.57

?>
]]>
    </programlisting>
   </example>
  </para>
  <example>
   <title><parameter>decimals</parameter> に負の値を指定する</title>
   <simpara>
    PHP 8.3.0 以降では、<parameter>decimals</parameter> に負の値を指定すると、
    小数点前の有効桁数を丸めるようになりました。
   </simpara>
   <programlisting role="php">
<![CDATA[
<?php
$number = "1234.5678";
var_dump(number_format($number, -1));
var_dump(number_format($number, -2));
var_dump(number_format($number, -3));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
string(5) "1,230"
string(5) "1,200"
string(5) "1,000"
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>money_format</function></member>
    <member><function>sprintf</function></member>
    <member><function>printf</function></member>
    <member><function>sscanf</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
