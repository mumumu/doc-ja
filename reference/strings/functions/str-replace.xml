<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: hirokawa Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.str-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>str_replace</refname>
  <refpurpose>検索文字列に一致したすべての文字列を置換する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>str_replace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>search</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>replace</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   この関数は、<parameter>subject</parameter> の中の
   <parameter>search</parameter> を全て
   <parameter>replace</parameter> に置換します。
  </para>
  <para>
   固定の文字列ではなく、パターンベースでテキストを置換したい場合、
   <function>preg_replace</function> を使ってください。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <parameter>search</parameter> と <parameter>replace</parameter>
   が配列の場合、<function>str_replace</function> は各配列から値をひとつ取り出し、
   <parameter>subject</parameter> 上で検索と置換を行うために使用します。
   <parameter>replace</parameter> の値が
   <parameter>search</parameter> よりも少ない場合、
   置換される値の残りの部分には空の文字列が使用されます。
   <parameter>search</parameter> が配列で
   <parameter>replace</parameter> が文字列の場合、この置換文字列が
   <parameter>search</parameter> の各値について使用されます。しかし、
   逆は意味がありません。
  </para>
  <para>
   <parameter>search</parameter> あるいは <parameter>replace</parameter>
   が配列の場合は、配列の最初の要素から順に処理されます。
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>search</parameter></term>
     <listitem>
      <para>
       探したい値。<emphasis>needle (針)</emphasis> と呼ばれることもあります。
       配列を使えば、複数の値を指定することもできます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       見つかった <parameter>search</parameter> を置き換える値。
       配列を使えば、複数の値を指定することもできます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       検索・置換の対象となる文字列あるいは配列。
       <emphasis>haystack (干し草の山)</emphasis> と呼ばれることもあります。
      </para>
      <para>
       <parameter>subject</parameter> が配列の場合、
       <parameter>subject</parameter> の各エントリについて検索と置換が行われ、
       戻り値は同様に配列となります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <para>
       指定した場合は、マッチして置換が行われた箇所の個数がここに格納されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   この関数は、置換後の文字列あるいは配列を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>基本的な <function>str_replace</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// <body text='black'> となります
$bodytag = str_replace("%body%", "black", "<body text='%body%'>");
echo $bodytag, PHP_EOL;

// Hll Wrld f PHP となります
$vowels = array("a", "e", "i", "o", "u", "A", "E", "I", "O", "U");
$onlyconsonants = str_replace($vowels, "", "Hello World of PHP");
echo $onlyconsonants, PHP_EOL;

// You should eat pizza, beer, and ice cream every day となります
$phrase  = "You should eat fruits, vegetables, and fiber every day.";
$healthy = array("fruits", "vegetables", "fiber");
$yummy   = array("pizza", "beer", "ice cream");

$newphrase = str_replace($healthy, $yummy, $phrase);
echo $newphrase, PHP_EOL;

// 2 となります
$str = str_replace("ll", "", "good golly miss molly!", $count);
echo $count, PHP_EOL;
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>str_replace</function> に関するちょっとした事実</title>
    <programlisting role="php">
<![CDATA[
<?php
// 置換の順番を指定します
$str     = "Line 1\nLine 2\rLine 3\r\nLine 4\n";
$order   = array("\r\n", "\n", "\r");
$replace = '<br />';

// まず最初に \r\n を置換するので、二重に変換されることはありません
$newstr = str_replace($order, $replace, $str);
echo $newstr, PHP_EOL;

// 出力は F となります。A が B に、そして B が C に、そして……
// 最終的に E が F に置換されるからです。置換は左から右へと順に行われます
$search  = array('A', 'B', 'C', 'D', 'E');
$replace = array('B', 'C', 'D', 'E', 'F');
$subject = 'A';
echo str_replace($search, $replace, $subject), PHP_EOL;

// 出力は apearpearle pear となります
// 上で説明したのと同じ理由です
$letters = array('a', 'p');
$fruit   = array('apple', 'pear');
$text    = 'a p';
$output  = str_replace($letters, $fruit, $text);
echo $output, PHP_EOL;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <caution>
   <title>置換の順番に関するメモ</title>
   <para>
    <function>str_replace</function> は左から右へと置換を行うので、
    複数の置換を行うときには、前に追加された値を置換する可能性もあります。
    このドキュメントのサンプルを参照ください。
   </para>
  </caution>
  <note>
   <para>
    この関数は大文字小文字を区別します。区別せずに置換するには
    <function>str_ireplace</function> を使用します。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_ireplace</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
