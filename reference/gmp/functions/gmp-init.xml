<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c75f19c74fa3b64abfafd7a35aaa652b07834a5a Maintainer: mumumu Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.gmp-init" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>gmp_init</refname>
  <refpurpose>GMP 数を作成する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>GMP</type><methodname>gmp_init</methodname>
   <methodparam><type class="union"><type>int</type><type>string</type></type><parameter>num</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>base</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   整数または文字列から GMP 数を生成します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>num</parameter></term>
    <listitem>
     <simpara>
      整数値あるいは文字列。文字列表現には、
      10進数か16進数か8進数、あるいは2進数を使用可能です。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>base</parameter></term>
    <listitem>
     <simpara>
      文字列表現を変換するのに使う基数 
     </simpara>
     <simpara>
      明示的に基数を指定する場合、
      <literal>2</literal> から <literal>62</literal> までの値を指定できます。
      <literal>36</literal> までの場合、大文字小文字は無視されます。
      つまり、大文字だろうと小文字だろうと、同じ値だということです。
      <literal>37</literal> から <literal>62</literal> までの場合、
      大文字の値は <literal>10</literal> から <literal>35</literal>
      までの値を示し、小文字の値は <literal>36</literal> から <literal>61</literal>
      までの値を示します。
     </simpara>
     <simpara>
      <parameter>base</parameter> を <literal>0</literal> にした場合、
      実際の基数の解釈は <parameter>num</parameter> の先頭の文字によって決まります。
      最初の2文字が <literal>0x</literal> や <literal>0X</literal> の場合、
      文字列は16進数として解釈されます。
      最初の2文字が <literal>0b</literal> や <literal>0B</literal> の場合、
      文字列は2進数として解釈されます。
      最初の2文字が <literal>0o</literal> や <literal>0o</literal> の場合、
      文字列は8進数として解釈されます。
      さらに、最初の文字が <literal>0</literal> の場合も、
      文字列は8進数として解釈されます。
      上記以外の場合は全て、文字列は10進数として解釈されます。
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &gmp.return;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.1.0</entry>
      <entry>
       <parameter>num</parameter> 文字列に、8進数を表すプレフィックス
       <literal>0o</literal> と <literal>0o</literal>
       を明示的に指定する機能をサポートしました。
       <parameter>base</parameter> を <literal>0</literal> にした場合に、
       こうしたプレフィックスをを解釈する機能も追加されています。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>GMP 数の作成</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = gmp_init(123456);
$b = gmp_init("0xFFFFDEBACDFEDF7200");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>gmp_add</function> のような GMP 関数において、GMP
    数を指定するところに整数または文字列を使用したい場合には、
    この関数をコールする必要はありません。この場合、変換が必要な場合には、
    <function>gmp_init</function> と同様の方法で関数の引数は自動的に
    GMP 数に変換されます。
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>GMP::__construct</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
