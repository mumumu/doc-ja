<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 79c0572a57cd5a84e9b527b40b0e07c0390e9cea Maintainer: mumumu Status: ready -->
<refentry xml:id="reflectionproperty.getrawvalue" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionProperty::getRawValue</refname>
  <refpurpose>get フックが定義されていたとしても、それを迂回してプロパティの値を返す</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ReflectionProperty">
   <modifier>public</modifier> <type>mixed</type><methodname>ReflectionProperty::getRawValue</methodname>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
  </methodsynopsis>
  &warn.undocumented.func;
  <simpara>
   <literal>get</literal> フックが定義されていたとしても、それを迂回してプロパティの値を返します。
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>object</parameter></term>
    <listitem>
     <simpara>
      値を取得するオブジェクト
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   プロパティに保存した値を返します。
   その値は <literal>get</literal> フックが定義されていたとしても、
   それを迂回したものになります。
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simpara>
   プロパティが仮想プロパティだった場合、
   <classname>Error</classname> がスローされます。
   取得する実体の値が存在しないためです。
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="reflectionproperty.getrawvalue.example.basic">
   <title><methodname>ReflectionProperty::getRawValue</methodname> の例</title>
   <programlisting role="php">
<![CDATA[
<?php

class Example
{
    public string $tag {
        get => strtolower($this->tag);
    }
}

$example = new Example();
$example->tag = 'PHP';

$rClass = new \ReflectionClass(Example::class);
$rProp = $rClass->getProperty('tag');

// getフックを経由した値なので、"php" を出力します。
echo $example->tag, PHP_EOL;
echo $rProp->getValue($example), PHP_EOL;

// But this would bypass the hook and produce "PHP"
// フックを迂回するので、"PHP" を出力します。
echo $rProp->getRawValue($example);

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
php
php
PHP
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><link linkend="language.oop5.visibility-members-aviz">非対称可視性プロパティ</link></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
